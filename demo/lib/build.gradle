/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.ajoberstar.grgit', name: 'grgit-core', version: '4.1.1'
        classpath group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.5'
        classpath group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7.1'
    }
}

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id 'org.ajoberstar.grgit' version '4.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:2.5.5'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-groovy-2.5'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register('deploy') {
    doLast {
        println "Deploy..."
        println "easyRepoDir: " + easyRepoDir
        println "easyDeployUrl: " + easyDeployUrl

        def grGit = grgit.open(dir: easyRepoDir)
        grGit.add(patterns: ['.'], update: true)
        grGit.commit(message: 'Auto-commit with Gradle deploy')
        grGit.push(force: true)
      
        URL url = new URL(easyDeployUrl)
        URLConnection urlConnection = url.openConnection()
        def code = urlConnection.getResponseCode();
         println "Deploy status: " + code
    }
}